<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.example</groupId>
	<artifactId>MyRemoteLibrary</artifactId>
	<version>1.0</version>
	<packaging>jar</packaging>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<testLibraryClass>com.example.MyRemoteLibrary</testLibraryClass>
	</properties>
	<dependencies>

		<!-- provides AnnotationLibrary (easy to create a dynamic API library) -->
		<dependency>
			<groupId>org.robotframework</groupId>
			<artifactId>javalib-core</artifactId>
			<version>2.0.3</version>
		</dependency>

		<!-- serve the library remotely -->
		<dependency>
			<groupId>org.robotframework</groupId>
			<artifactId>jrobotremoteserver</artifactId>
			<version>4.1.0</version>
		</dependency>

		<!-- escape text for HTML and copy IO streams -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.12.0</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.11.0</version>
		</dependency>

		<!-- used to generate the library documentation -->
		<dependency>
			<groupId>org.robotframework</groupId>
			<artifactId>robotframework</artifactId>
			<version>4.1.2</version>
			<scope>test</scope>
		</dependency>

		<!-- unit testing framework used to generate the library documentation -->
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>7.5</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<!-- create a jar with all dependencies i.e. a standalone jar -->
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
					<archive>
						<manifest>

							<!-- make the jar runnable -->
							<mainClass>${testLibraryClass}</mainClass>
						</manifest>
					</archive>
				</configuration>
				<executions>

					<!-- automatically build the standalone jar during the package phase -->
					<execution>
						<id>make-my-jar-with-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- execute Robot Framework tests during the build -->
			<plugin>
				<groupId>org.robotframework</groupId>
				<artifactId>robotframework-maven-plugin</artifactId>
				<version>2.1.0</version>
				<executions>
					<execution>
						<phase>test</phase>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<logLevel>TRACE:INFO</logLevel>
					<testCasesDirectory>src/test/resources/robotframework/tests</testCasesDirectory>
					<!-- communicate to the acceptance tests that the library is being built -->
					<variables>
						<variable>BUILDING:True</variable>
					</variables>
				</configuration>
			</plugin>
		</plugins>
		<testResources>

			<!-- replace text in the test resources making Maven properties accessible 
				in the test phase -->
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>
	</build>
</project>
